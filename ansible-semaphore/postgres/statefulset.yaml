apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: ansible-semaphore-db
  labels:
    app.kubernetes.io/name: ansible-semaphore-db
    app.kubernetes.io/instance: ansible-semaphore-db
spec:
  strategy:
    rollingUpdate:
      maxSurge: 0                 # The number of pods that can be created above the desired amount of pods during an update
      maxUnavailable: 1           # The number of pods that can be unavailable during the update process
    type: RollingUpdate           # New pods are added gradually, and old pods are terminated gradually
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: ansible-semaphore-db
      app.kubernetes.io/instance: ansible-semaphore-db
  template:
    metadata:
      labels:
        app.kubernetes.io/name: ansible-semaphore-db
        app.kubernetes.io/instance: ansible-semaphore-db
    spec:
      containers:
        - name: ansible-semaphore-db
          image: "postgres:15.7-bookworm"
          ports:
            - containerPort: 5432
          env: 
            - name: POSTGRES_USER
              valueFrom:
                configMapKeyRef::
                  name: ansible-semaphore
                  key: db_user
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: ansible-semaphore
                  key: db_password
          volumeMounts: 
            - name: ansible-semaphore-db
              mountPath: "/var/lib/postgresql/data"
              subPath: data
      volumes:
      - name: ansible-semaphore-db
        persistentVolumeClaim:
          claimName: ansible-semaphore-db