apiVersion: apps/v1
kind: Deployment
metadata:
  name: jellyfin
  labels:
    app.kubernetes.io/name: jellyfin
    app.kubernetes.io/instance: jellyfin
spec:
  strategy:
    rollingUpdate:
      maxSurge: 0                 # < The number of pods that can be created above the desired amount of pods during an update
      maxUnavailable: 1           # < The number of pods that can be unavailable during the update process
    type: RollingUpdate           # < New pods are added gradually, and old pods are terminated gradually
  selector:
    matchLabels:
      app.kubernetes.io/name: jellyfin
      app.kubernetes.io/instance: jellyfin
  template:
    metadata:
      labels:
        app.kubernetes.io/name: jellyfin
        app.kubernetes.io/instance: jellyfin
    spec:
      nodeSelector:
        nvidia.com/gpu.present: "true"
      runtimeClassName: nvidia
      # I think this will allow Jellyfin to more easily communicate with the TV tuner devices?
      hostNetwork: true
      containers:
        - name: jellyfin
          securityContext:
            privileged: true
            sysctls:
              - name: fs.inotify.max_user_watches
                value: 524288
          image: jellyfin/jellyfin:10.10.4
          ports:
            - containerPort: 8096
          env:
            - name: TZ
              value: "America/Chicago"
            - name: JELLYFIN_CACHE_DIR
              value: "/cache"
          volumeMounts:
            - name: config
              mountPath: "/config"
            - name: cache
              mountPath: "/cache"
            - name: zap2it
              mountPath: /media/xmltv 
            - name: tvshows
              mountPath: /media/tvshows
            - name: movies
              mountPath: /media/movies
            - name: audiobooks
              mountPath: /media/audiobooks
            - name: books
              mountPath: /media/books 
            - name: music
              mountPath: /media/music
            - name: liveshows
              mountPath: /media/liveshows
    
          readinessProbe:
            httpGet:
              path: /web
              port: 8096
            initialDelaySeconds: 5
            periodSeconds: 5
            
          livenessProbe:
            httpGet:
              path: /health
              port: 8096
            initialDelaySeconds: 240
            periodSeconds: 60
          
          resources:
            limits:
              cpu: 6
              memory: "14Gi"
              nvidia.com/gpu: "2" 
            requests:
              cpu: 6
              memory: "12Gi" 
              nvidia.com/gpu: "2"
   
      volumes:
        - name: config
          persistentVolumeClaim:
            claimName: jellyfin
        - name: cache
          emptyDir:
            sizeLimit: 5Gi
        - name: zap2it
          persistentVolumeClaim:
            claimName: zap2it 
        - name: meili
          persistentVolumeClaim:
            claimName: jellyfin-meili
        - name: movies
          nfs:
            server: unraid.cosmonautical.cloud
            path: /mnt/user/movies
        - name: tvshows
          nfs:
            server: unraid.cosmonautical.cloud
            path: /mnt/user/tvshows
        - name: audiobooks
          nfs:
            server: unraid.cosmonautical.cloud
            path: /mnt/user/audiobooks
        - name: books
          nfs:
            server: unraid.cosmonautical.cloud
            path: /mnt/user/books
        - name: music
          nfs:
            server: unraid.cosmonautical.cloud
            path: /mnt/user/music
        - name: liveshows
          nfs: 
            server: unraid.cosmonautical.cloud
            path: /mnt/user/liveshows
