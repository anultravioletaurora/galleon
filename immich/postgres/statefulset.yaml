apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: immich-db
  labels:
    app.kubernetes.io/name: immich-db
    app.kubernetes.io/instance: immich-db
spec:
  strategy:
    rollingUpdate:
      maxSurge: 0                 # The number of pods that can be created above the desired amount of pods during an update
      maxUnavailable: 1           # The number of pods that can be unavailable during the update process
    type: RollingUpdate           # New pods are added gradually, and old pods are terminated gradually
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: immich-db
      app.kubernetes.io/instance: immich-db
  template:
    metadata:
      labels:
        app.kubernetes.io/name: immich-db
        app.kubernetes.io/instance: immich-db
    spec:
      containers:
        - name: immich-db
          image: "tensorchord/pgvecto-rs:pg14-v0.2.0@sha256:90724186f0a3517cf6914295b5ab410db9ce23190a2d9d0b9dd6463e3fa298f0"
          ports:
            - containerPort: 5432
          env: 
            - name: POSTGRES_USER
              valueFrom:
                configMapKeyRef:
                  name: immich
                  key: db_user
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: immich
                  key: db_password
            - name: DB_DATABASE_NAME
              valueFrom:
                configMapKeyRef:
                  name: immich
                  key: db_name
          volumeMounts: 
            - name: immich
              mountPath: "/var/lib/postgresql/data"
              subPath: data
      volumes:
      - name: immich
        persistentVolumeClaim:
          claimName: immich